import { useLoaderData, Link } from 'react-router'
import { getLetters, type Letter } from '~/lib/database'
import PageLayout from '~/components/page-layout'
import { Calendar, User, FileText, ExternalLink } from 'lucide-react'

export async function loader() {
  const letters = getLetters()
  return { letters }
}

export function meta() {
  return [
    { title: 'Diplomatic Letters - UN Speeches' },
    {
      name: 'description',
      content: 'Browse diplomatic letters generated by our AI agent system.',
    },
  ]
}

interface LetterCardProps {
  letter: Letter
}

function LetterCard({ letter }: LetterCardProps) {
  const formatDate = (dateString: string) => {
    return new Date(dateString).toLocaleDateString('en-US', {
      year: 'numeric',
      month: 'long',
      day: 'numeric',
      hour: '2-digit',
      minute: '2-digit',
    })
  }

  const truncateText = (text: string, maxLength: number = 300) => {
    if (text.length <= maxLength) return text
    return text.slice(0, maxLength) + '...'
  }

  const parseMetadata = (metadata: string | null | undefined) => {
    if (!metadata) return null
    try {
      return JSON.parse(metadata)
    } catch {
      return null
    }
  }

  const metadata = parseMetadata(letter.metadata)

  return (
    <Link to={`/letter/${letter.id}`} className="block group">
      <div className="bg-white border border-gray-200 rounded-lg p-6 hover:border-un-blue hover:shadow-md transition-all duration-200 h-full flex flex-col">
        <div className="mb-4">
          <div className="flex items-start justify-between mb-3">
            <div className="flex-1">
              <h3 className="text-lg font-semibold text-gray-900 group-hover:text-un-blue mb-2 line-clamp-2">
                {letter.subject || 'Diplomatic Letter'}
              </h3>

              <div className="flex items-center text-sm text-gray-600 mb-2">
                <User className="w-4 h-4 mr-2 flex-shrink-0" />
                <span className="font-medium">{letter.addressed_to}</span>
              </div>

              <div className="flex items-center text-sm text-gray-500">
                <Calendar className="w-4 h-4 mr-2 flex-shrink-0" />
                <span>{formatDate(letter.date_created)}</span>
              </div>
            </div>

            <div className="ml-4 flex-shrink-0">
              <FileText className="w-5 h-5 text-gray-400 group-hover:text-un-blue" />
            </div>
          </div>

          {metadata && (
            <div className="flex flex-wrap gap-2 mb-3">
              {metadata.country_code && (
                <span className="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                  {metadata.country_code}
                </span>
              )}
              {metadata.speech_ids && metadata.speech_ids.length > 0 && (
                <span className="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-purple-100 text-purple-800">
                  {metadata.speech_ids.length} speech
                  {metadata.speech_ids.length !== 1 ? 'es' : ''} referenced
                </span>
              )}
            </div>
          )}
        </div>

        <div className="flex-1">
          <div className="text-gray-700 text-sm leading-relaxed">
            {truncateText(letter.content)}
          </div>
        </div>

        <div className="mt-4 pt-4 border-t border-gray-100">
          <div className="flex items-center justify-between">
            <div className="text-xs text-gray-500">Letter ID: {letter.id}</div>
            <div className="flex items-center text-sm text-un-blue group-hover:text-un-blue-dark">
              <span className="mr-1">Read full letter</span>
              <ExternalLink className="w-4 h-4" />
            </div>
          </div>
        </div>
      </div>
    </Link>
  )
}

export default function Letters() {
  const { letters } = useLoaderData<typeof loader>()

  return (
    <PageLayout>
      <div className="mb-8">
        <h1 className="text-3xl font-bold text-gray-900 mb-4">
          Diplomatic Letters
        </h1>
        <p className="text-lg text-gray-600 max-w-3xl">
          Browse diplomatic letters generated by our AI agent system. These
          letters are crafted with extensive research from UN speeches and
          diplomatic discourse, addressing current global affairs through
          creative and strategic channels.
        </p>
      </div>

      <div className="mb-6">
        <div className="flex items-center justify-between">
          <div className="text-sm text-gray-600">
            {letters.length > 0 ? (
              <>
                Showing {letters.length} letter{letters.length !== 1 ? 's' : ''}
              </>
            ) : (
              'No letters found'
            )}
          </div>
        </div>
      </div>

      {letters.length > 0 ? (
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {letters.map((letter) => (
            <LetterCard key={letter.id} letter={letter} />
          ))}
        </div>
      ) : (
        <div className="text-center py-12">
          <FileText className="w-16 h-16 text-gray-300 mx-auto mb-4" />
          <h3 className="text-lg font-medium text-gray-900 mb-2">
            No letters yet
          </h3>
          <p className="text-gray-600 max-w-md mx-auto">
            No diplomatic letters have been generated yet. Letters will appear
            here as they are created by the AI agent system.
          </p>
        </div>
      )}
    </PageLayout>
  )
}
